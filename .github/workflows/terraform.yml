name: 'Terraform CRUD'

on:
  repository_dispatch:
    types: [azure_resources]

  workflow_dispatch:
  
permissions:
  contents: read
  
jobs:
  terraform:
    name: 'Terraform CRUD'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
        
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Init
      run: terraform init
    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var 'service=${{ github.event.client_payload.serviceName }}' -input=false
      
    - name: Create
      id: apply
      if: github.event.client_payload.action == 'create'
      run: terraform apply -auto-approve -input=false
    
    - name: Read
      if: github.event.client_payload.action == 'read'
      run: terraform show

    - name: Update
      if: github.event.client_payload.action == 'update'
      run: terraform apply -auto-approve -input=false

    - name: Delete
      if: github.event.client_payload.action == 'delete'
      run: terraform apply -destroy -auto-approve -input=false

    - name: Test
      if: github.event.client_payload.action == 'test'
      run: terraform apply -var ${{ github.event.client_payload.resourceGroupName }} -auto-approve -input=false